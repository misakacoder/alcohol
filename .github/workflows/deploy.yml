name: Deploy to GitHub Package

on:
  push:
    branches:
      - master

permissions:
  contents: read
  packages: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'maven'

      - name: Configure maven setting
        run: |
          mkdir -p ~/.m2
          cat <<EOF > ~/.m2/settings.xml
          <settings>
            <servers>
              <server>
                <id>${{ github.actor }}</id>
                <username>${{ github.actor }}</username>
                <password>${{ secrets.PERSONAL_ACCESS_TOKEN }}</password>
              </server>
            </servers>
          </settings>
          EOF

      - name: Delete old version
        env:
          PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          sudo apt-get install -y libxml2-utils
          cat <<EOF > delete.sh
          set -x
          parse() {
              local pom=$1
              groupId=$(xmllint --xpath '/*[local-name()="project"]/*[local-name()="groupId"]/text()' "$pom" 2>/dev/null)
              if [ -z "$groupId" ]; then
                  groupId=$(xmllint --xpath '/*[local-name()="project"]/*[local-name()="parent"]/*[local-name()="groupId"]/text()' "$pom" 2>/dev/null)
              fi
              artifactId=$(xmllint --xpath '/*[local-name()="project"]/*[local-name()="artifactId"]/text()' "$pom" 2>/dev/null)
              if [ -n "$groupId" ] && [ -n "$artifactId" ]; then
                  curl -s -L -X DELETE -H "Authorization: Bearer $PERSONAL_ACCESS_TOKEN" https://api.github.com/user/packages/maven/$groupId.$artifactId
              fi
          }
          excluded_modules=("bourbon" "gin" "scotch")
          find . -name "pom.xml" | while read pom; do
              pom_dir=$(dirname "${pom#./}")
              if [[ ! " ${excluded_modules[@]} " =~ " $pom_dir " ]]; then
                  parse $pom
              fi
          done
          excluded_projects=$(IFS=,; echo "${excluded_modules[*]/#/!}")
          echo "excluded_projects=$excluded_projects" >> $GITHUB_ENV
          EOF
          cat delete.sh

      - name: Build and publish
        run: mvn -B clean deploy -pl ${{ env.excluded_projects }} -am -Dmaven.test.skip=true